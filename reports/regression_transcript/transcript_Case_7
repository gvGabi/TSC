# 1
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5c Compiler 2017.01 Jan 23 2017
# Start time: 09:11:17 on Apr 15,2024
# vlog -sv -timescale 1ps/1ps -work work -f sources.txt 
# -- Compiling package instr_register_pkg
# -- Compiling module instr_register
# -- Importing package instr_register_pkg
# -- Compiling module instr_register_test
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 09:11:17 on Apr 15,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -novopt -quiet -nocoverage "+notimingchecks" "+nowarnTSCALE" -sva top -GTEST_NAME=Case_7 -GWRITE_ORDER=1 -GWRITE_NR=50 -GSEED_VAL=2009408 -GREAD_ORDER=1 -GREAD_NR=50 
# Start time: 09:11:17 on Apr 15,2024
# ** Warning: (vsim-3017) ../lab01_testbench-interface/top.sv(24): [TFMPC] - Too few port connections. Expected 10, found 9.
#    Time: 0 ns  Iteration: 0  Instance: /top/test File: ../lab01_testbench-interface/instr_register_test.sv
# ** Warning: (vsim-3722) ../lab01_testbench-interface/top.sv(24): [TFMPC] - Missing connection for port 'exp_res'.
# 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH.  YOU  DON'T    ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES    ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION ***
# **********************************************************
# 
# Reseting the instruction register...
# 
# Writing values to register stack...
# Writing to register location 21: 
#   opcode = 1 (PASSA)
#   operand_a = 0
#   operand_b = 9
# 
# Saved data:  opcode = 1 (PASSA), operand_a = 0, operand_b = 9.
# Saved at location 21.
# 
# Writing to register location 24: 
#   opcode = 5 (MULT)
#   operand_a = -7
#   operand_b = 9
# 
# Saved data:  opcode = 5 (MULT), operand_a = -7, operand_b = 9.
# Saved at location 24.
# 
# Writing to register location 19: 
#   opcode = 0 (ZERO)
#   operand_a = 9
#   operand_b = 5
# 
# Saved data:  opcode = 0 (ZERO), operand_a = 9, operand_b = 5.
# Saved at location 19.
# 
# Writing to register location 15: 
#   opcode = 3 (ADD)
#   operand_a = 5
#   operand_b = 8
# 
# Saved data:  opcode = 3 (ADD), operand_a = 5, operand_b = 8.
# Saved at location 15.
# 
# Writing to register location 7: 
#   opcode = 7 (MOD)
#   operand_a = -8
#   operand_b = 3
# 
# Saved data:  opcode = 7 (MOD), operand_a = -8, operand_b = 3.
# Saved at location 7.
# 
# Writing to register location 0: 
#   opcode = 7 (MOD)
#   operand_a = 3
#   operand_b = 15
# 
# Saved data:  opcode = 7 (MOD), operand_a = 3, operand_b = 15.
# Saved at location 0.
# 
# Writing to register location 20: 
#   opcode = 0 (ZERO)
#   operand_a = 15
#   operand_b = 7
# 
# Saved data:  opcode = 0 (ZERO), operand_a = 15, operand_b = 7.
# Saved at location 20.
# 
# Writing to register location 14: 
#   opcode = 4 (SUB)
#   operand_a = 7
#   operand_b = 0
# 
# Saved data:  opcode = 4 (SUB), operand_a = 7, operand_b = 0.
# Saved at location 14.
# 
# Writing to register location 20: 
#   opcode = 6 (DIV)
#   operand_a = 0
#   operand_b = 4
# 
# Saved data:  opcode = 6 (DIV), operand_a = 0, operand_b = 4.
# Saved at location 20.
# 
# Writing to register location 14: 
#   opcode = 4 (SUB)
#   operand_a = -12
#   operand_b = 14
# 
# Saved data:  opcode = 4 (SUB), operand_a = -12, operand_b = 14.
# Saved at location 14.
# 
# Writing to register location 28: 
#   opcode = 6 (DIV)
#   operand_a = 14
#   operand_b = 4
# 
# Saved data:  opcode = 6 (DIV), operand_a = 14, operand_b = 4.
# Saved at location 28.
# 
# Writing to register location 16: 
#   opcode = 4 (SUB)
#   operand_a = -12
#   operand_b = 14
# 
# Saved data:  opcode = 4 (SUB), operand_a = -12, operand_b = 14.
# Saved at location 16.
# 
# Writing to register location 9: 
#   opcode = 0 (ZERO)
#   operand_a = 14
#   operand_b = 12
# 
# Saved data:  opcode = 0 (ZERO), operand_a = 14, operand_b = 12.
# Saved at location 9.
# 
# Writing to register location 9: 
#   opcode = 1 (PASSA)
#   operand_a = 12
#   operand_b = 0
# 
# Saved data:  opcode = 1 (PASSA), operand_a = 12, operand_b = 0.
# Saved at location 9.
# 
# Writing to register location 20: 
#   opcode = 1 (PASSA)
#   operand_a = 0
#   operand_b = 9
# 
# Saved data:  opcode = 1 (PASSA), operand_a = 0, operand_b = 9.
# Saved at location 20.
# 
# Writing to register location 16: 
#   opcode = 4 (SUB)
#   operand_a = 9
#   operand_b = 9
# 
# Saved data:  opcode = 4 (SUB), operand_a = 9, operand_b = 9.
# Saved at location 16.
# 
# Writing to register location 26: 
#   opcode = 0 (ZERO)
#   operand_a = 9
#   operand_b = 4
# 
# Saved data:  opcode = 0 (ZERO), operand_a = 9, operand_b = 4.
# Saved at location 26.
# 
# Writing to register location 10: 
#   opcode = 2 (PASSB)
#   operand_a = -12
#   operand_b = 0
# 
# Saved data:  opcode = 2 (PASSB), operand_a = -12, operand_b = 0.
# Saved at location 10.
# 
# Writing to register location 18: 
#   opcode = 2 (PASSB)
#   operand_a = 0
#   operand_b = 10
# 
# Saved data:  opcode = 2 (PASSB), operand_a = 0, operand_b = 10.
# Saved at location 18.
# 
# Writing to register location 17: 
#   opcode = 2 (PASSB)
#   operand_a = 10
#   operand_b = 10
# 
# Saved data:  opcode = 2 (PASSB), operand_a = 10, operand_b = 10.
# Saved at location 17.
# 
# Writing to register location 7: 
#   opcode = 1 (PASSA)
#   operand_a = -6
#   operand_b = 2
# 
# Saved data:  opcode = 1 (PASSA), operand_a = -6, operand_b = 2.
# Saved at location 7.
# 
# Writing to register location 13: 
#   opcode = 7 (MOD)
#   operand_a = -14
#   operand_b = 1
# 
# Saved data:  opcode = 7 (MOD), operand_a = -14, operand_b = 1.
# Saved at location 13.
# 
# Writing to register location 10: 
#   opcode = 5 (MULT)
#   operand_a = -15
#   operand_b = 7
# 
# Saved data:  opcode = 5 (MULT), operand_a = -15, operand_b = 7.
# Saved at location 10.
# 
# Writing to register location 29: 
#   opcode = 2 (PASSB)
#   operand_a = 7
#   operand_b = 13
# 
# Saved data:  opcode = 2 (PASSB), operand_a = 7, operand_b = 13.
# Saved at location 29.
# 
# Writing to register location 20: 
#   opcode = 5 (MULT)
#   operand_a = -3
#   operand_b = 10
# 
# Saved data:  opcode = 5 (MULT), operand_a = -3, operand_b = 10.
# Saved at location 20.
# 
# Writing to register location 19: 
#   opcode = 4 (SUB)
#   operand_a = 10
#   operand_b = 13
# 
# Saved data:  opcode = 4 (SUB), operand_a = 10, operand_b = 13.
# Saved at location 19.
# 
# Writing to register location 28: 
#   opcode = 3 (ADD)
#   operand_a = 13
#   operand_b = 4
# 
# Saved data:  opcode = 3 (ADD), operand_a = 13, operand_b = 4.
# Saved at location 28.
# 
# Writing to register location 14: 
#   opcode = 4 (SUB)
#   operand_a = -12
#   operand_b = 3
# 
# Saved data:  opcode = 4 (SUB), operand_a = -12, operand_b = 3.
# Saved at location 14.
# 
# Writing to register location 30: 
#   opcode = 6 (DIV)
#   operand_a = -13
#   operand_b = 12
# 
# Saved data:  opcode = 6 (DIV), operand_a = -13, operand_b = 12.
# Saved at location 30.
# 
# Writing to register location 13: 
#   opcode = 6 (DIV)
#   operand_a = -4
#   operand_b = 14
# 
# Saved data:  opcode = 6 (DIV), operand_a = -4, operand_b = 14.
# Saved at location 13.
# 
# Writing to register location 22: 
#   opcode = 5 (MULT)
#   operand_a = 14
#   operand_b = 14
# 
# Saved data:  opcode = 5 (MULT), operand_a = 14, operand_b = 14.
# Saved at location 22.
# 
# Writing to register location 20: 
#   opcode = 6 (DIV)
#   operand_a = 14
#   operand_b = 13
# 
# Saved data:  opcode = 6 (DIV), operand_a = 14, operand_b = 13.
# Saved at location 20.
# 
# Writing to register location 28: 
#   opcode = 4 (SUB)
#   operand_a = -3
#   operand_b = 6
# 
# Saved data:  opcode = 4 (SUB), operand_a = -3, operand_b = 6.
# Saved at location 28.
# 
# Writing to register location 9: 
#   opcode = 4 (SUB)
#   operand_a = -10
#   operand_b = 4
# 
# Saved data:  opcode = 4 (SUB), operand_a = -10, operand_b = 4.
# Saved at location 9.
# 
# Writing to register location 23: 
#   opcode = 1 (PASSA)
#   operand_a = -12
#   operand_b = 12
# 
# Saved data:  opcode = 1 (PASSA), operand_a = -12, operand_b = 12.
# Saved at location 23.
# 
# Writing to register location 0: 
#   opcode = 7 (MOD)
#   operand_a = -4
#   operand_b = 9
# 
# Saved data:  opcode = 7 (MOD), operand_a = -4, operand_b = 9.
# Saved at location 0.
# 
# Writing to register location 9: 
#   opcode = 0 (ZERO)
#   operand_a = -7
#   operand_b = 7
# 
# Saved data:  opcode = 0 (ZERO), operand_a = -7, operand_b = 7.
# Saved at location 9.
# 
# Writing to register location 11: 
#   opcode = 1 (PASSA)
#   operand_a = -9
#   operand_b = 0
# 
# Saved data:  opcode = 1 (PASSA), operand_a = -9, operand_b = 0.
# Saved at location 11.
# 
# Writing to register location 30: 
#   opcode = 3 (ADD)
#   operand_a = 0
#   operand_b = 9
# 
# Saved data:  opcode = 3 (ADD), operand_a = 0, operand_b = 9.
# Saved at location 30.
# 
# Writing to register location 25: 
#   opcode = 6 (DIV)
#   operand_a = -7
#   operand_b = 11
# 
# Saved data:  opcode = 6 (DIV), operand_a = -7, operand_b = 11.
# Saved at location 25.
# 
# Writing to register location 29: 
#   opcode = 1 (PASSA)
#   operand_a = -5
#   operand_b = 14
# 
# Saved data:  opcode = 1 (PASSA), operand_a = -5, operand_b = 14.
# Saved at location 29.
# 
# Writing to register location 8: 
#   opcode = 5 (MULT)
#   operand_a = 14
#   operand_b = 9
# 
# Saved data:  opcode = 5 (MULT), operand_a = 14, operand_b = 9.
# Saved at location 8.
# 
# Writing to register location 9: 
#   opcode = 0 (ZERO)
#   operand_a = 9
#   operand_b = 13
# 
# Saved data:  opcode = 0 (ZERO), operand_a = 9, operand_b = 13.
# Saved at location 9.
# 
# Writing to register location 7: 
#   opcode = 1 (PASSA)
#   operand_a = -3
#   operand_b = 8
# 
# Saved data:  opcode = 1 (PASSA), operand_a = -3, operand_b = 8.
# Saved at location 7.
# 
# Writing to register location 19: 
#   opcode = 7 (MOD)
#   operand_a = -8
#   operand_b = 9
# 
# Saved data:  opcode = 7 (MOD), operand_a = -8, operand_b = 9.
# Saved at location 19.
# 
# Writing to register location 20: 
#   opcode = 3 (ADD)
#   operand_a = 9
#   operand_b = 7
# 
# Saved data:  opcode = 3 (ADD), operand_a = 9, operand_b = 7.
# Saved at location 20.
# 
# Writing to register location 14: 
#   opcode = 4 (SUB)
#   operand_a = 7
#   operand_b = 3
# 
# Saved data:  opcode = 4 (SUB), operand_a = 7, operand_b = 3.
# Saved at location 14.
# 
# Writing to register location 26: 
#   opcode = 6 (DIV)
#   operand_a = -13
#   operand_b = 4
# 
# Saved data:  opcode = 6 (DIV), operand_a = -13, operand_b = 4.
# Saved at location 26.
# 
# Writing to register location 7: 
#   opcode = 2 (PASSB)
#   operand_a = 4
#   operand_b = 14
# 
# Saved data:  opcode = 2 (PASSB), operand_a = 4, operand_b = 14.
# Saved at location 7.
# 
# Writing to register location 5: 
#   opcode = 7 (MOD)
#   operand_a = 14
#   operand_b = 10
# 
# Saved data:  opcode = 7 (MOD), operand_a = 14, operand_b = 10.
# Saved at location 5.
# 
# 
# Reading back the same register locations written...
# Read from register location 23: 
#   opcode = 1 (PASSA)
#   operand_a = -12
#   operand_b = 12
#   result = -12
# 
# Reading from location 23
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -12. Received result: -12.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 12: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   result = 0
# 
# Reading from location 12
# Wrong opcode.
# Wrong operand_a.
# Wrong operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 2: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   result = 0
# 
# Reading from location 2
# Wrong opcode.
# Wrong operand_a.
# Wrong operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 21: 
#   opcode = 1 (PASSA)
#   operand_a = 0
#   operand_b = 9
#   result = 0
# 
# Reading from location 21
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 31: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   result = 0
# 
# Reading from location 31
# Wrong opcode.
# Wrong operand_a.
# Wrong operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 28: 
#   opcode = 4 (SUB)
#   operand_a = -3
#   operand_b = 6
#   result = -9
# 
# Reading from location 28
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -9. Received result: -9.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 11: 
#   opcode = 1 (PASSA)
#   operand_a = -9
#   operand_b = 0
#   result = -9
# 
# Reading from location 11
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -9. Received result: -9.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 14: 
#   opcode = 4 (SUB)
#   operand_a = 7
#   operand_b = 3
#   result = 4
# 
# Reading from location 14
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 4. Received result: 4.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 20: 
#   opcode = 3 (ADD)
#   operand_a = 9
#   operand_b = 7
#   result = 16
# 
# Reading from location 20
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 16. Received result: 16.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 17: 
#   opcode = 2 (PASSB)
#   operand_a = 10
#   operand_b = 10
#   result = 10
# 
# Reading from location 17
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 10. Received result: 10.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 29: 
#   opcode = 1 (PASSA)
#   operand_a = -5
#   operand_b = 14
#   result = -5
# 
# Reading from location 29
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -5. Received result: -5.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 5: 
#   opcode = 7 (MOD)
#   operand_a = 14
#   operand_b = 10
#   result = 4
# 
# Reading from location 5
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 4. Received result: 4.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 22: 
#   opcode = 5 (MULT)
#   operand_a = 14
#   operand_b = 14
#   result = 196
# 
# Reading from location 22
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 196. Received result: 196.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 31: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   result = 0
# 
# Reading from location 31
# Wrong opcode.
# Wrong operand_a.
# Wrong operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 26: 
#   opcode = 6 (DIV)
#   operand_a = -13
#   operand_b = 4
#   result = -3
# 
# Reading from location 26
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -3. Received result: -3.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 8: 
#   opcode = 5 (MULT)
#   operand_a = 14
#   operand_b = 9
#   result = 126
# 
# Reading from location 8
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 126. Received result: 126.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 23: 
#   opcode = 1 (PASSA)
#   operand_a = -12
#   operand_b = 12
#   result = -12
# 
# Reading from location 23
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -12. Received result: -12.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 10: 
#   opcode = 5 (MULT)
#   operand_a = -15
#   operand_b = 7
#   result = -105
# 
# Reading from location 10
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -105. Received result: -105.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 26: 
#   opcode = 6 (DIV)
#   operand_a = -13
#   operand_b = 4
#   result = -3
# 
# Reading from location 26
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -3. Received result: -3.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 22: 
#   opcode = 5 (MULT)
#   operand_a = 14
#   operand_b = 14
#   result = 196
# 
# Reading from location 22
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 196. Received result: 196.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 9: 
#   opcode = 0 (ZERO)
#   operand_a = 9
#   operand_b = 13
#   result = 0
# 
# Reading from location 9
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 1: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   result = 0
# 
# Reading from location 1
# Wrong opcode.
# Wrong operand_a.
# Wrong operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 28: 
#   opcode = 4 (SUB)
#   operand_a = -3
#   operand_b = 6
#   result = -9
# 
# Reading from location 28
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -9. Received result: -9.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 15: 
#   opcode = 3 (ADD)
#   operand_a = 5
#   operand_b = 8
#   result = 13
# 
# Reading from location 15
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 13. Received result: 13.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 15: 
#   opcode = 3 (ADD)
#   operand_a = 5
#   operand_b = 8
#   result = 13
# 
# Reading from location 15
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 13. Received result: 13.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 22: 
#   opcode = 5 (MULT)
#   operand_a = 14
#   operand_b = 14
#   result = 196
# 
# Reading from location 22
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 196. Received result: 196.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 10: 
#   opcode = 5 (MULT)
#   operand_a = -15
#   operand_b = 7
#   result = -105
# 
# Reading from location 10
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -105. Received result: -105.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 5: 
#   opcode = 7 (MOD)
#   operand_a = 14
#   operand_b = 10
#   result = 4
# 
# Reading from location 5
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 4. Received result: 4.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 0: 
#   opcode = 7 (MOD)
#   operand_a = -4
#   operand_b = 9
#   result = -4
# 
# Reading from location 0
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -4. Received result: -4.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 12: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   result = 0
# 
# Reading from location 12
# Wrong opcode.
# Wrong operand_a.
# Wrong operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 12: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   result = 0
# 
# Reading from location 12
# Wrong opcode.
# Wrong operand_a.
# Wrong operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 20: 
#   opcode = 3 (ADD)
#   operand_a = 9
#   operand_b = 7
#   result = 16
# 
# Reading from location 20
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 16. Received result: 16.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 16: 
#   opcode = 4 (SUB)
#   operand_a = 9
#   operand_b = 9
#   result = 0
# 
# Reading from location 16
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 18: 
#   opcode = 2 (PASSB)
#   operand_a = 0
#   operand_b = 10
#   result = 10
# 
# Reading from location 18
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 10. Received result: 10.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 2: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   result = 0
# 
# Reading from location 2
# Wrong opcode.
# Wrong operand_a.
# Wrong operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 7: 
#   opcode = 2 (PASSB)
#   operand_a = 4
#   operand_b = 14
#   result = 14
# 
# Reading from location 7
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 14. Received result: 14.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 28: 
#   opcode = 4 (SUB)
#   operand_a = -3
#   operand_b = 6
#   result = -9
# 
# Reading from location 28
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -9. Received result: -9.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 25: 
#   opcode = 6 (DIV)
#   operand_a = -7
#   operand_b = 11
#   result = 0
# 
# Reading from location 25
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 21: 
#   opcode = 1 (PASSA)
#   operand_a = 0
#   operand_b = 9
#   result = 0
# 
# Reading from location 21
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 27: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   result = 0
# 
# Reading from location 27
# Wrong opcode.
# Wrong operand_a.
# Wrong operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 15: 
#   opcode = 3 (ADD)
#   operand_a = 5
#   operand_b = 8
#   result = 13
# 
# Reading from location 15
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 13. Received result: 13.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 19: 
#   opcode = 7 (MOD)
#   operand_a = -8
#   operand_b = 9
#   result = -8
# 
# Reading from location 19
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -8. Received result: -8.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 7: 
#   opcode = 2 (PASSB)
#   operand_a = 4
#   operand_b = 14
#   result = 14
# 
# Reading from location 7
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 14. Received result: 14.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 26: 
#   opcode = 6 (DIV)
#   operand_a = -13
#   operand_b = 4
#   result = -3
# 
# Reading from location 26
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -3. Received result: -3.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 23: 
#   opcode = 1 (PASSA)
#   operand_a = -12
#   operand_b = 12
#   result = -12
# 
# Reading from location 23
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -12. Received result: -12.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 23: 
#   opcode = 1 (PASSA)
#   operand_a = -12
#   operand_b = 12
#   result = -12
# 
# Reading from location 23
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -12. Received result: -12.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 10: 
#   opcode = 5 (MULT)
#   operand_a = -15
#   operand_b = 7
#   result = -105
# 
# Reading from location 10
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -105. Received result: -105.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 31: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   result = 0
# 
# Reading from location 31
# Wrong opcode.
# Wrong operand_a.
# Wrong operand_b.
# 
# Expected result: 0. Received result: 0.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 11: 
#   opcode = 1 (PASSA)
#   operand_a = -9
#   operand_b = 0
#   result = -9
# 
# Reading from location 11
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: -9. Received result: -9.
# Test PASSED.
# 
# ------------------------------------
# 
# Read from register location 30: 
#   opcode = 3 (ADD)
#   operand_a = 0
#   operand_b = 9
#   result = 9
# 
# Reading from location 30
# Corresponding opcode.
# Corresponding operand_a.
# Corresponding operand_b.
# 
# Expected result: 9. Received result: 9.
# Test PASSED.
# 
# ------------------------------------
# 
# 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH.  YOU  DON'T    ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES    ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION ***
# **********************************************************
# 
# ** Note: $finish    : ../lab01_testbench-interface/instr_register_test.sv(92)
#    Time: 1046 ns  Iteration: 1  Instance: /top/test
# End time: 09:11:18 on Apr 15,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 2
